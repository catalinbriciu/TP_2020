#include <stdio.h>
#include <time.h>
int stiva[20000];
int varf = -1;

void push(int nr)
{
	stiva[++varf] = nr;
}

int pop(void)
{
	if (varf > 0)
	{
		return stiva[varf--];
	}
	else
		return -1;
}

void generare(int numere)
{
	int count=0;
	for (int i = 0; i < 2147483647; i++)
	{

		if (i % 2 == 0 && count<numere)
		{
			push(i);
			count++;
		}
	}
}

int cautareLiniara(int vect[], int x, int n)
{
	int i;
	for (i = 0; i < n - 1 && vect[i] - x; i++)
	{
	}

	return i;
}

int cautareBinara(int vect[], int x, int n)
{
	int s, d, m;
	s = 0;
	d = n - 1;
	do
	{
		m = (s + d) / 2;
		if (vect[m] > x)
		{
			d = m - 1;
		}
		else
		{
			s = m + 1;
		}
	} while (vect[m] != x && s <= d);

	return m;
}



 int getNumber(int pos)
{
	 return stiva[pos];
}




int main(void)
{
	int retur;
	generare(20000);
	clock_t start, end;
	double time_taken;
	start = clock();
	time_taken = 0;
	cautareLiniara(stiva,getNumber(4), 20000);		
	end = clock();	
	time_taken=(double)(end - start) / (double)(CLOCKS_PER_SEC);
	printf("TIMPUL NECESAR PENTRU PROGRAM - CAUTARE LINIARA: %d secunde", time_taken);

	printf("\n");
	time_taken = 0;
	start = clock();
	cautareBinara(stiva, getNumber(4), 20000);	
	end = clock();
	 time_taken = (double)(end - start) / (double)(CLOCKS_PER_SEC);
	printf("TIMPUL NECESAR PENTRU PROGRAM - CAUTARE BINARA: %d secunde", time_taken);

	printf("\n");

	printf("\n");
	printf("\n");
	printf("\n");
	printf("\n");
	time_taken = 0;
	cautareLiniara(stiva, getNumber(19935), 20000);
	end = clock();
	time_taken = (double)(end - start) / (double)(CLOCKS_PER_SEC);
	printf("TIMPUL NECESAR PENTRU PROGRAM - CAUTARE LINIARA: %d secunde", time_taken);
	time_taken = 0;
	printf("\n");
	start = clock();
	cautareBinara(stiva, getNumber(19935), 20000);
	end = clock();
	time_taken = (double)(end - start) / (double)(CLOCKS_PER_SEC);
	printf("TIMPUL NECESAR PENTRU PROGRAM - CAUTARE BINARA: %d secunde", time_taken);


	return 0;
}